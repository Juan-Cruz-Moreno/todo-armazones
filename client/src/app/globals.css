@import "tailwindcss";
@plugin "daisyui";

@font-face {
  font-family: "Jost";
  src: url("/fonts/Jost-VF.ttf") format("truetype");
  font-weight: 100 900;
  font-display: swap;
}

@layer base {
  body {
    background-color: #ffffff;
    font-family: "Jost", sans-serif;
  }
}

/* Add your global styles here */

:root {
  --navbar-height: 64px;
}

/* Short fade used when MaintenanceGuard triggers a client-side navigation.
   We apply `html.site-fade-out` briefly before calling router.replace to
   make the transition feel smoother. The timeout used in the guard matches
   these transition durations (approx 120-180ms). */
html.site-fade-out body > * {
  transition: opacity .18s ease, transform .18s ease;
  opacity: 0;
  transform: scale(0.995);
}

/* sensible default so server and client share an initial navbar height
   (avoids hydration mismatch when JS updates the real value) */
:root {
  --navbar-height: 64px;
}

/* Personalización de flechas de Swiper */
.swiper-button-next,
.swiper-button-prev {
  color: #666666 !important; /* Gris */
  font-size: 14px !important; /* Tamaño más pequeño */
  width: 30px !important; /* Ancho reducido */
  height: 30px !important; /* Alto reducido */
}
.swiper-button-next::after,
.swiper-button-prev::after {
  color: #666666 !important;
  font-size: 14px !important;
}

/*Landing*/

.button-sweep {
  position: relative;
  overflow: hidden;
  background: #ffffff;
  color: #000000;
  transition: color 0.3s ease;
}

.button-sweep span {
  position: relative;
  z-index: 1;
}

@keyframes arrow-appear {
  0% {
    transform: translateX(0);
    opacity: 1;
  }
  50% {
    transform: translateX(-20px);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

.button-sweep svg {
  position: relative;
  z-index: 1;
  opacity: 1;
  transition: opacity 0.3s ease;
}

.button-sweep:hover svg {
  animation: arrow-appear 0.4s ease;
}

.button-sweep::before {
  content: "";
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: #69727d;
  transition: left 0.3s ease;
}

.button-sweep:hover {
  color: #ffffff;
}

.button-sweep:hover::before {
  left: 0;
}

/* Dark variant for buttons that should start at #444444 and sweep to a darker shade on hover */
.button-sweep.button-dark {
  background: #444444;
  color: #ffffff;
}

.button-sweep.button-dark::before {
  /* slightly darker sweep color */
  background: #222222;
}

.underline-animate {
  position: relative;
  text-decoration: none;
}

.underline-animate::after {
  content: "";
  position: absolute;
  bottom: -1px;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: black;
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 0.3s ease;
}

.underline-animate:hover::after {
  transform: scaleX(1);
  transform-origin: left;
}

.underline-animate-gray::after {
  background: #888888;
}

.underline-animate-active::after {
  width: 100% !important;
  transform: scaleX(1) !important; /* Agregar esta línea */
}

.no-underline {
  text-decoration: none !important;
}

/* Hero should fill viewport minus the navbar height (set dynamically via JS) */
.hero {
  height: calc(100dvh - var(--navbar-height, 0px));
  min-height: calc(100dvh - var(--navbar-height, 0px));
  /* fallback for browsers without dvh support could be handled here if needed */
}

/* Prevent visual jump on initial load: keep hero hidden until navbar height is known */
:root:not(.has-navbar-height) .hero {
  visibility: hidden;
  opacity: 0;
}

:root.has-navbar-height .hero {
  visibility: visible;
  opacity: 1;
  transition: opacity 280ms ease;
}